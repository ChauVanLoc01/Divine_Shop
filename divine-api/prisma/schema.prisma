generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model cmt {
  cmt_id            String    @id @db.VarChar(50)
  content           String    @db.Text
  created           DateTime? @default(now()) @db.Timestamp(0)
  updated           DateTime? @db.Timestamp(0)
  user_id           String?   @db.VarChar(50)
  email             String    @db.VarChar(100)
  item_id           String    @db.VarChar(50)
  references_cmt_id String?   @db.VarChar(50)
  user              user?     @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "cmt_ibfk_1")
  item              item      @relation(fields: [item_id], references: [item_id], onDelete: NoAction, onUpdate: NoAction, map: "cmt_ibfk_2")
  cmt               cmt?      @relation("cmtTocmt", fields: [references_cmt_id], references: [cmt_id], onDelete: NoAction, onUpdate: NoAction, map: "cmt_ibfk_3")
  other_cmt         cmt[]     @relation("cmtTocmt")

  @@index([item_id], map: "item_id")
  @@index([user_id], map: "user_id")
  @@index([references_cmt_id], map: "references_cmt_id")
}

model item {
  item_id             String          @id @db.VarChar(50)
  item_name           String          @db.VarChar(500)
  image               String          @db.VarChar(300)
  price               Float           @db.Float
  priceBeforeDiscount Float?          @db.Float
  quantity            Int
  sold                Int?            @default(0)
  description         String?         @db.Text
  category            item_category
  created             DateTime?       @default(now()) @db.Timestamp(0)
  updated             DateTime?       @db.Timestamp(0)
  cmt                 cmt[]
  favorate_item       favorate_item[]
  itemInOrder         itemInOrder[]
}

model itemInOrder {
  order_id String @db.VarChar(50)
  item_id  String @db.VarChar(50)
  quantity Int
  order    order  @relation(fields: [order_id], references: [order_id], onDelete: NoAction, onUpdate: NoAction, map: "iteminorder_ibfk_1")
  item     item   @relation(fields: [item_id], references: [item_id], onDelete: NoAction, onUpdate: NoAction, map: "iteminorder_ibfk_2")

  @@id([order_id, item_id])
  @@index([item_id], map: "item_id")
}

model order {
  order_id    String        @id @db.VarChar(50)
  status      order_status? @default(waiting_confirm)
  total       Float         @db.Float
  discount    Float?        @default(0)
  note        String?       @db.VarChar(500)
  created     DateTime?     @default(now()) @db.Timestamp(0)
  updated     DateTime?     @db.Timestamp(0)
  user_id     String        @db.VarChar(50)
  itemInOrder itemInOrder[]
  user        user          @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "order_ibfk_1")

  @@index([user_id], map: "user_id")
}

model session {
  session_id    Int       @id @default(autoincrement())
  user_id       String    @db.VarChar(50)
  access_token  String    @db.VarChar(500)
  refresh_token String    @db.VarChar(500)
  created       DateTime? @default(now()) @db.Timestamp(0)
  updated       DateTime? @db.Timestamp(0)
  user          user      @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "session_ibfk_1")

  @@index([user_id], map: "user_id")
}

model user {
  user_id       String          @id @db.VarChar(50)
  name          String          @db.VarChar(50)
  email         String          @db.VarChar(100)
  password      String?         @db.VarChar(100)
  avatar        String?         @db.VarChar(500)
  point         Int?            @default(0)
  role          user_role?      @default(user)
  isActive      Boolean?        @default(true)
  created       DateTime?       @default(now()) @db.Timestamp(0)
  updated       DateTime?       @db.Timestamp(0)
  cmt           cmt[]
  favorate_item favorate_item[]
  order         order[]
  session       session[]
}

model favorate_item {
  item_id       String    @db.VarChar(50)
  user_id       String    @db.VarChar(50)
  receive_email Boolean?  @default(true)
  created       DateTime? @default(now()) @db.Timestamp(0)
  item          item      @relation(fields: [item_id], references: [item_id], onDelete: NoAction, onUpdate: NoAction, map: "favorate_item_ibfk_1")
  user          user      @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "favorate_item_ibfk_2")

  @@id([item_id, user_id])
  @@index([user_id], map: "user_id")
}

enum order_status {
  waiting_confirm
  success
  cancel
}

enum user_role {
  admin
  user
}

enum item_category {
  entertainment
  work
  learn
  game_steam
  ea_games
  window_office
  google_drive
  steam_wallet
  google_play_itune
}
