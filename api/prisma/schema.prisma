generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model cmt {
  cmt_id  Int       @id @default(autoincrement())
  content String    @db.Text
  created DateTime? @default(now()) @db.Timestamp(0)
  updated DateTime? @db.Timestamp(0)
  user_id String    @db.VarChar(100)
  item_id String    @db.VarChar(100)
  user    user      @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "cmt_ibfk_1")
  item    item      @relation(fields: [item_id], references: [item_id], onDelete: NoAction, onUpdate: NoAction, map: "cmt_ibfk_2")

  @@index([item_id], map: "item_id")
  @@index([user_id], map: "user_id")
}

model item {
  item_id             String    @id @db.VarChar(100)
  item_name           String    @db.VarChar(500)
  price               Float
  priceBeforeDiscount Float
  quantity            Int
  sold                Int
  description         String?   @db.Text
  created             DateTime? @default(now()) @db.Timestamp(0)
  updated             DateTime? @db.Timestamp(0)
  cmt                 cmt[]
}

model order {
  order_id     Int            @id @default(autoincrement())
  items        Json
  status       order_status?
  created      DateTime?      @default(now()) @db.Timestamp(0)
  order_detail order_detail[] @ignore
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model order_detail {
  order_id Int
  items    Json
  order    order @relation(fields: [order_id], references: [order_id], onDelete: NoAction, onUpdate: NoAction, map: "order_detail_ibfk_1")

  @@index([order_id], map: "order_id")
  @@ignore
}

model user {
  user_id   String    @id @db.VarChar(100)
  user_name String    @db.VarChar(50)
  email     String    @db.VarChar(100)
  password  String    @db.VarChar(100)
  role      user_role
  isActive  Boolean?  @default(true)
  created   DateTime? @default(now()) @db.Timestamp(0)
  updated   DateTime? @db.Timestamp(0)
  cmt       cmt[]

  @@index([email, password], map: "email")
}

enum order_status {
  success
  fail
}

enum user_role {
  admin
  user
}
